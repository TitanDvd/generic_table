<?php

namespace Mmt\GenericTable\Support;

use Mmt\GenericTable\Export\GenericExportable;
use Response;


final class ExportSettings
{
    public function __construct(
        public string $fileName = '',
        public bool $useFormatters = true,
        public bool $autoNamedOutputFile = true,
        public bool $appendTimeMarkToFilename = true,
        public string $fileExtension = 'xlsx'
    ) { }

    private function makeFileName(): string
    {
        return "{$this->fileName}" . ($this->appendTimeMarkToFilename == true ? '_'.date('YmdHis') : '') . "." . ($this->excelLibInstalled() ? $this->fileExtension : 'csv');
    }

    public function export(array $headers, array $rows)
    {
        $fileName = $this->makeFileName();

        if($this->excelLibInstalled()) {
            $exportFile = new GenericExportable($headers, $rows, $fileName);
            return $exportFile->download($fileName);
        }
        else {
            return $this->downloadCSV($fileName, $headers, $rows);
        }
    }


    private function excelLibInstalled()
    {
        return \Composer\InstalledVersions::isInstalled('maatwebsite/excel');
    }


    /**
     * 
     * Generated by ChatGPT
     * 
     */
    public function downloadCSV(string $fileName, array $headers, array $data)
    {
        $filePath = storage_path("app/{$fileName}");
    
        $file = fopen($filePath, 'w');
        
        // Write headers
        if (!empty($headers)) {
            fputcsv($file, $headers);
        }
        
        // Write data to the CSV file
        foreach ($data as $row) {
            fputcsv($file, $row);
        }
        
        fclose($file);
        
        return Response::download($filePath, $fileName, [
            'Content-Type' => 'text/csv',
            'Content-Disposition' => "attachment; filename=\"{$fileName}\""
        ])->deleteFileAfterSend(true);
    }
}